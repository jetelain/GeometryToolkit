<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace Pmad.Geometry.Algorithms
{
	public static class SignedArea
	{
<#

	var definitions = new []
	{
        (Struct: "Vector2I", ResultType: "double"),
		(Struct: "Vector2F", ResultType: "float"),
		(Struct: "Vector2L", ResultType: "double"),
		(Struct: "Vector2D", ResultType: "double"),
        (Struct: "Vector2IS", ResultType: "double"),
		(Struct: "Vector2FS", ResultType: "double"),
		(Struct: "Vector2LS", ResultType: "double"),
		(Struct: "Vector2DS", ResultType: "double")
	};

	foreach(var def in definitions)
	{
#>
        public static <#=def.ResultType#> GetSignedArea(this IReadOnlyList<<#=def.Struct#>> points)
        {
            if (points.Count < 3)
            {
                return 0;
            }
            var v1 = points[points.Count-1];
            <#=def.ResultType#> area = 0;
            for (var i = 0; i < points.Count; i++)
            {
                var v2 = points[i];
                area += <#=def.Struct#>.CrossProduct(v1, v2);
                v1 = v2;
            }
            return area / 2;
        }
<#
	}
#>
	}
}
