<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\..\..\src\Pmad.Geometry\Definitions.tt" #>
<#@ output extension=".cs" #>

namespace Pmad.Geometry.Test.Shapes.PolygonSets
{
<#
	foreach(var def in definitions.Where(d => d.Visibility == "public"))
	{
#>
	public partial class Polygon<#=def.Suffix#>Test : PolygonSetTestBase<<#=def.Primitive#>,<#=def.Struct#>>
	{
        protected override int Integer(<#=def.Primitive#> v) => (int)v;

        protected override <#=def.Struct#> Vector(int x, int y) => new ((<#=def.Primitive#>)x, (<#=def.Primitive#>)y);
		
<# if ( def.IsFP) { #>
		protected override <#=def.Struct#> Truncate(<#=def.Struct#> p)
        {
            return new <#=def.Struct#>((int)p.X, (int)p.Y);
        }
<# } #>
	}
<#
	}
#>
}
